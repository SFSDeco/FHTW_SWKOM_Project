version: '3.8'


services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'

  rest-server:
    build: backend/rest
    container_name: rest-server-container
    ports:
      - "8081:8081"
    volumes:
      - ./backend/rest/target:/app
    command: ["java", "-jar", "/app/rest-application.jar"]
    depends_on:
      - postgres
      - rabbitmq
      - minio
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672


  angular-frontend:
    build: frontend/webpage
    container_name: webpage-container
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rest-server

  rabbitmq:
    image: 'rabbitmq:3-management'
    container_name: rabbitmq-container
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - '5672:5672'
      - '15672:15672'

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9090:9090"
    command: server --console-address ":9090" /data

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:8.16.1'
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: 'docker.elastic.co/kibana/kibana:8.16.1'
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200/
    ports:
      - "9092:5601"